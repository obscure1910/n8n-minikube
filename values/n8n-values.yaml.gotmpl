image:
  repository: n8nio/n8n
  pullPolicy: IfNotPresent
  tag: "1.103.2"

main:
  config:
    n8n:
      editor_base_url: https://{{ .Values.ngrok.domain }}
      hide_usage_page: true
    # license ist beim ersten Start noch nicht vorhanden und wird erst per mail zugesendet. Kann hier anschließend gesetzt werden
      license:
        activation: 
          key: {{ .Values.n8n.license }}
    # Diese Url wird an Services gegeben damit diese Trigger in n8n auskösen können
    webhook_url: https://{{ .Values.ngrok.domain }}
    executions_mode: queue
    queue:
      bull:
        # valkey konfiguration
        # valkey wird verwendet um requests vom webhook abzulegen. n8n im queue mode pulled dann die Aufträge und verarbeitet diese
        redis: 
          host: n8n-valkey-primary.n8n.svc.cluster.local
          port: "6379"
  secret:
    n8n:
      encryption_key: {{ .Values.n8n.encryptionKey }}
  resources:
    limits:
      memory: 2048Mi
    requests:
      memory: 512Mi
  extraEnv: &extraEnv
    - name: N8N_RUNNERS_ENABLED
      value: "true"
    # sonst kommt eine Warnung beim aufruf dass man eine unsichere Verbindung verwendet
    - name: N8N_SECURE_COOKIE
      value: "false"
    # Zeitzone setzen
    - name: GENERIC_TIMEZONE
      value: Europe/Berlin
    - name: TZ
      value: Europe/Berlin
    # benutze postgresql um konfiguration zu speichern
    - name: DB_TYPE
      value: postgresdb
    - name: DB_POSTGRESDB_DATABASE
      value: n8n
    - name: DB_POSTGRESDB_HOST
      value: postgresql.database.svc.cluster.local
    - name: DB_POSTGRESDB_PORT
      value: "5432"
    - name: DB_POSTGRESDB_USER
      value: {{ .Values.postgresql.user }}
    - name: DB_POSTGRESDB_PASSWORD
      value: {{ .Values.postgresql.password }}
    # notwednig da n8n hinter ngrok läuft
    - name: N8N_PROXY_HOPS
      value: "1"
    - name: OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS
      value: "true"
    # sonst funktionieren die health checks nicht im queue mode und keine execution wird erfolgreich
    - name: QUEUE_HEALTH_CHECK_ACTIVE
      value: "true"

webhook:
  enabled: true
  extraEnv: *extraEnv

worker:
  enabled: true
  extraEnv: *extraEnv
       
valkey:
  enabled: true
  architecture: standalone
  sentinel:
    enabled: false
  auth:
    enabled: false
  primary:
    kind: Deployment
    persistence:
      enabled: false
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
