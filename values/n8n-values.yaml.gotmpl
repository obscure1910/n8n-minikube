image:
  repository: n8nio/n8n
  pullPolicy: IfNotPresent
  tag: "1.100.1"

webhook:
  enabled: true
       
valkey:
  enabled: true
  architecture: standalone
  sentinel:
    enabled: false
  auth:
    enabled: false
  primary:
    kind: Deployment
    persistence:
      enabled: false
    resources:
      requests:
        memory: 256Mi
        cpu: 100m

main:
  config:
    n8n:
      editor_base_url: https://{{ .Values.domain }}
      hide_usage_page: true
    # valkey konfiguration
    # valkey wird verwendet um requests vom webhook abzulegen. N8N im queue mode pulled dann die Aufträge und verarbeitet diese
    QUEUE_BULL_REDIS_HOST: n8n-valkey-primary.n8n.svc.cluster.local
    QUEUE_BULL_REDIS_PORT: "6379"
    EXECUTIONS_MODE: "queue" 
    # Diese Url wird an Services gegeben damit diese Trigger in N8N auskösen können
    WEBHOOK_URL: https://{{ .Values.domain }}
  secret:
    n8n:
      encryption_key: {{ .Values.n8n.encryptionKey }}
  resources:
    limits:
      memory: 2048Mi
    requests:
      memory: 512Mi
  extraEnv:
    # sonst kommt eine Warnung beim aufruf dass man eine unsichere Verbindung verwendet
    - name: N8N_SECURE_COOKIE
      value: "false"
    # Zeitzone setzen
    - name: GENERIC_TIMEZONE
      value: Europe/Berlin
    - name: TZ
      value: Europe/Berlin
    # benutze postgresql um konfiguration zu speichern
    - name: DB_TYPE
      value: postgresdb
    - name: DB_POSTGRESDB_DATABASE
      value: n8n
    - name: DB_POSTGRESDB_HOST
      value: postgresql.database.svc.cluster.local
    - name: DB_POSTGRESDB_PORT
      value: "5432"
    - name: DB_POSTGRESDB_USER
      value: myuser
    - name: DB_POSTGRESDB_PASSWORD
      value: mypassword
   